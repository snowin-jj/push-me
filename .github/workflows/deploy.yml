name: Release
on:
    push:
        tags:
            - 'v*'
env:
    TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
    TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

    workflow_dispatch:

jobs:
    release:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                platform: [macos-latest, ubuntu-latest, windows-latest]
        runs-on: ${{ matrix.platform }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            # changelog
            - name: Build ChangeLog
              id: build_changelog
              run: echo "changelog=- ADD CHNAGELOG" >> $GITHUB_OUTPUT

            - name: Install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-latest'
              # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

            - name: Rust setup
              uses: dtolnay/rust-toolchain@stable

            - name: Rust cache
              uses: swatinem/rust-cache@v2
              with:
                  workspaces: './src-tauri -> target'

            - name: Install Nodejs
              uses: actions/setup-node@v3
              with:
                  node-version: 'lts/*'
                  # cache: 'pnpm' # Set this to npm, yarn or pnpm.

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8
                  run_install: false

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install frontend dependencies
              # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
              run: pnpm install # Change this to npm, yarn or pnpm.

            - name: Tauri Build and Release (Non MacOS)
              uses: tauri-apps/tauri-action@v0
              if: matrix.platform != 'macos-latest'
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
                  releaseName: 'Push Me v__VERSION__'
                  releaseBody: 'See the assets to download this version and install.'
                  releaseDraft: true
                  prerelease: false

            - name: Add Mac Universal Target
              if: matrix.platform == 'macos-latest'
              run: rustup target add aarch64-apple-darwin

            - name: Tauri Build and Release (MacOS Universal Build)
              uses: tauri-apps/tauri-action@v0
              if: matrix.platform == 'macos-latest'
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
                  APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
                  APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
                  APPLE_ID: ${{ secrets.APPLE_ID }}
                  APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
              with:
                  tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
                  releaseName: 'Push Me v__VERSION__'
                  args: '--target universal-apple-darwin' # build universal app for mac, tauri is small any ways. 6MB -> 13MB. No difference
                  releaseBody: 'See the assets to download this version and install.'
                  releaseDraft: true
                  prerelease: false
